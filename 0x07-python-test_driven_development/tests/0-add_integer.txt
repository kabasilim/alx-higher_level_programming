Test cases for ``Add Integer`` module

============================

    >>> add_integer = __import__('0-add_integer').add_integer

    >>> add_integer(2, 3)
    5

    >>> add_integer(2, 5.6)
    7

    >>> add_integer(3)
    101

    >>> add_integer(2.2, 8.5)
    10

    >>> add_integer(2, "Hello")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer("Hello")
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(4, [2, 4, 5])
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(4, {2, 4, 5})
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(3j, 8)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(float('-inf'))
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer
